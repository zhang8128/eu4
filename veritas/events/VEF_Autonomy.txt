#########################
# Unique Autonomy Drive #
#########################

#Decentralisation policy will stop the natural fall of autonomy (0.1 per month)
#Reign of Terror will reduce autonomy ignoring these values
#Unrest will result when minimums are ignored

#Local Assembly minimum is 40%
#Civic charter minimum is 20%

#Non-core provinces moves up towards 60%

#Following values stack
#Non-accepted culture moves up towards 20%
#Accepted, non-primary culture moves up towards 10%
#Majority noble/church ownership with serfdom moves towards 20%
#Forts exert central authority; no minimum in those provinces
#Insufficient Bureaucracy pushes autonomy up based on distance from the capital

#1 Province Autonomy Shifts (Monthly)
#2 Determine Province Layer (5-year)

namespace = vef_autonomy

# Provincial Autonomy Shifts
country_event = {
	id = vef_autonomy.1
	title = "vef_autonomy.1.t"
	desc = "vef_autonomy.1.d"
	picture = VEF_IMPORTANT_STATUE_eventPicture
	
	hidden = yes
	
	immediate = {
		hidden_effect = {
			every_owned_province = {
				limit = { is_capital = no }
				clr_province_flag = rest_10a
				clr_province_flag = rest_20a
				clr_province_flag = rest_30a
				clr_province_flag = rest_40a
				if = {
					limit = {
						NOT = { fort_level = 2 }
						OR = {
							has_building = light_serfdom
							has_building = moderate_serfdom
							has_building = heavy_serfdom
						}
						OR = {
							has_building = nobles_80
							has_building = nobles_60
							AND = {
								has_building = nobles_40
								OR = {
									has_building = church_60
									has_building = church_40
									has_building = church_20
									has_building = grand_priory
								}
							}
						}
					}
					if = {
						limit = { has_owner_culture = yes }
						set_province_flag = rest_20a
					}
					if = {
						limit = {
							OR = {
								has_owner_accepted_culture = yes
								AND = {
									NOT = { has_owner_culture = yes }
									owner = {
										culture_group = PREV
										OR = {
											AND = {
												has_dlc = "Common Sense"
												government_rank = 4
											}
											AND = {
												NOT = { has_dlc = "Common Sense" }
												total_development = 1050
											}
										}
									}
								}
							}
						}
						set_province_flag = rest_30a
					}
					if = {
						limit = {
							NOT = { has_owner_culture = yes }
							NOT = { has_owner_accepted_culture = yes }
							NOT = {
								owner = {
									culture_group = PREV
									OR = {
										AND = {
											has_dlc = "Common Sense"
											government_rank = 4
										}
										AND = {
											NOT = { has_dlc = "Common Sense" }
											total_development = 1050
										}
									}
								}
							}
						}
						set_province_flag = rest_40a
					}
				}
				if = {
					limit = {
						NOT = { has_province_flag = rest_20a }
						NOT = { has_province_flag = rest_30a }
						NOT = { has_province_flag = rest_40a }
					}
					if = {
						limit = {
							OR = {
								has_owner_accepted_culture = yes
								AND = {
									NOT = { has_owner_culture = yes }
									owner = {
										culture_group = PREV
										OR = {
											AND = {
												has_dlc = "Common Sense"
												government_rank = 4
											}
											AND = {
												NOT = { has_dlc = "Common Sense" }
												total_development = 1050
											}
										}
									}
								}
							}
							NOT = { fort_level = 2 }
						}
						set_province_flag = rest_10a
					}
					if = {
						limit = {
							NOT = { has_owner_accepted_culture = yes }
							NOT = { has_owner_culture = yes }
							NOT = {
								owner = {
									culture_group = PREV
									OR = {
										AND = {
											has_dlc = "Common Sense"
											government_rank = 4
										}
										AND = {
											NOT = { has_dlc = "Common Sense" }
											total_development = 1050
										}
									}
								}
							}
							NOT = { fort_level = 2 }
						}
						set_province_flag = rest_20a
					}
				}
				if = {
					limit = { has_building = courthouse }
					if = {
						limit = { has_province_flag = rest_10a }
						clr_province_flag = rest_10a
					}
					if = {
						limit = { has_province_flag = rest_20a }
						clr_province_flag = rest_20a
						set_province_flag = rest_10a
					}
					if = {
						limit = { has_province_flag = rest_30a }
						clr_province_flag = rest_30a
						set_province_flag = rest_20a
					}
					if = {
						limit = { has_province_flag = rest_40a }
						clr_province_flag = rest_40a
						set_province_flag = rest_30a
					}
				}
				if = {
					limit = {
						adm_tech = 44
						any_province_in_state = {
							OR = {
								is_capital = yes
								has_building = town_hall 
							}
						}
					}
					if = {
						limit = { has_province_flag = rest_10a }
						clr_province_flag = rest_10a
					}
					if = {
						limit = { has_province_flag = rest_20a }
						clr_province_flag = rest_20a
						set_province_flag = rest_10a
					}
					if = {
						limit = { has_province_flag = rest_30a }
						clr_province_flag = rest_30a
						set_province_flag = rest_20a
					}
					if = {
						limit = { has_province_flag = rest_40a }
						clr_province_flag = rest_40a
						set_province_flag = rest_30a
					}
				}
			}
		}
	}
	
	option = {
		trigger = { NOT = { has_active_policy = vef_reign_terror }}
		name = "vef_autonomy.1.opta"
		every_owned_province = {
			limit = { is_capital = no }
			if = {
				limit = {
					owner = {
						NOT = { has_country_modifier = inefficient_bureaucracy }
						NOT = { has_country_modifier = byzantine_decline1 }
						NOT = { has_country_modifier = byzantine_decline2 }
						NOT = { has_active_policy = vef_decentralisation }
					}
				}
				add_local_autonomy = -0.1
			}
			if = {
				limit = {
					OR = {
						has_province_flag = rest_10a
						has_province_flag = hold_10a
					}
				}
				if = {
					limit = { NOT = { local_autonomy = 9.5 }}
					add_local_autonomy = 0.2
				}
				if = {
					limit = {
						local_autonomy = 9.5
						NOT = { local_autonomy = 10 }
					}
					set_local_autonomy = 10
				}
			}
			if = {
				limit = {
					OR = {
						has_province_flag = rest_20a
						has_province_flag = hold_20a
					}
				}
				if = {
					limit = {
						local_autonomy = 19.5
						NOT = { local_autonomy = 20 }
					}
					set_local_autonomy = 20
				}
				if = {
					limit = { NOT = { local_autonomy = 19.5 }}
					add_local_autonomy = 0.2
				}
			}
			if = {
				limit = {
					OR = {
						has_province_flag = rest_30a
						has_province_flag = hold_30a
					}
				}
				if = {
					limit = {
						local_autonomy = 29.5
						NOT = { local_autonomy = 30 }
					}
					set_local_autonomy = 30
				}
				if = {
					limit = { NOT = { local_autonomy = 29.5 }}
					add_local_autonomy = 0.2
				}
			}
			if = {
				limit = {
					OR = {
						has_province_flag = rest_40a
						has_province_flag = hold_40a
					}
				}
				if = {
					limit = {
						local_autonomy = 39.5
						NOT = { local_autonomy = 40 }
					}
					set_local_autonomy = 40
				}
				if = {
					limit = { NOT = { local_autonomy = 39.5 }}
					add_local_autonomy = 0.2
				}
			}
			if = {
				limit = { has_province_flag = hold_60a }
				if = {
					limit = {
						local_autonomy = 59.5
						NOT = { local_autonomy = 60 }
					}
					set_local_autonomy = 60
				}
				if = {
					limit = { NOT = { local_autonomy = 59.5 }}
					add_local_autonomy = 0.2
				}
			}
			if = {
				limit = {
					NOT = { is_core = ROOT }
					NOT = { local_autonomy = 60 }
				}
				add_local_autonomy = 0.2
			}
		}
		if = {
			limit = { has_country_modifier = inefficient_bureaucracy }
			every_owned_province = {
				if = {
					limit = { has_province_flag = autonomy_group_five }
					add_local_autonomy = 0.3
					if = {
						limit = { local_autonomy = 60 }
						every_neighbor_province = {
							limit = { has_province_flag = autonomy_group_four }
							add_local_autonomy = 0.1
						}
					}
					else = {
						if = {
							limit = { has_province_flag = autonomy_group_four }
							add_local_autonomy = 0.2
							if = {
								limit = { local_autonomy = 60 }
								every_neighbor_province = {
									limit = { has_province_flag = autonomy_group_three }
									add_local_autonomy = 0.1
								}
							}
							else = {
								if = {
									limit = { has_province_flag = autonomy_group_three }
									add_local_autonomy = 0.1
									if = {
										limit = { local_autonomy = 60 }
										every_neighbor_province = {
											limit = { has_province_flag = autonomy_group_two }
											add_local_autonomy = 0.1
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
	
	option = {
		trigger = { has_active_policy = vef_reign_terror }
		name = "vef_autonomy.1.opta"
		every_owned_province = {
			limit = { is_capital = no }
			add_local_autonomy = -0.2
			if = {
				limit = {
					has_province_flag = rest_10a
					NOT = { local_autonomy = 10 }
				}
				add_local_autonomy = 0.1
			}
			if = {
				limit = {
					has_province_flag = rest_20a
					NOT = { local_autonomy = 20 }
				}
				add_local_autonomy = 0.1
			}
			if = {
				limit = {
					has_province_flag = rest_40a
					NOT = { local_autonomy = 40 }
				}
				add_local_autonomy = 0.1
			}
			if = {
				limit = {
					has_province_flag = hold_10a
					NOT = { local_autonomy = 10 }
				}
				add_local_autonomy = 0.2
			}
			if = {
				limit = {
					has_province_flag = hold_20a
					NOT = { local_autonomy = 20 }
				}
				add_local_autonomy = 0.2
			}
			if = {
				limit = {
					has_province_flag = hold_30a
					NOT = { local_autonomy = 30 }
				}
				add_local_autonomy = 0.2
			}
			if = {
				limit = {
					has_province_flag = hold_40a
					NOT = { local_autonomy = 40 }
				}
				add_local_autonomy = 0.2
			}
			if = {
				limit = {
					has_province_flag = hold_60a
					NOT = { local_autonomy = 60 }
				}
				add_local_autonomy = 0.2
			}
			if = {
				limit = {
					NOT = { is_core = ROOT }
					NOT = { local_autonomy = 60 }
				}
				add_local_autonomy = 0.3
			}
		}
		if = {
			limit = { has_country_modifier = inefficient_bureaucracy }
			every_owned_province = {
				if = {
					limit = { has_province_flag = autonomy_group_five }
					add_local_autonomy = 0.3
					if = {
						limit = { local_autonomy = 60 }
						every_neighbor_province = {
							limit = { has_province_flag = autonomy_group_four }
							add_local_autonomy = 0.1
						}
					}
					else = {
						if = {
							limit = { has_province_flag = autonomy_group_four }
							add_local_autonomy = 0.2
							if = {
								limit = { local_autonomy = 60 }
								every_neighbor_province = {
									limit = { has_province_flag = autonomy_group_three }
									add_local_autonomy = 0.1
								}
							}
							else = {
								if = {
									limit = { has_province_flag = autonomy_group_three }
									add_local_autonomy = 0.1
									if = {
										limit = { local_autonomy = 60 }
										every_neighbor_province = {
											limit = { has_province_flag = autonomy_group_two }
											add_local_autonomy = 0.1
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

# Determine Province Layer
country_event = {
	id = vef_autonomy.2
	title = "vef_autonomy.2.t"
	desc = "vef_autonomy.2.d"
	picture = VEF_IMPORTANT_STATUE_eventPicture
	
	is_triggered_only = yes #on_actions/five year pulse
	
	hidden = yes
	
	immediate = {
		set_country_flag = autonomy_circles_run
		#Adding merit here; saves creating another event for the five year pulse
		if = {
			limit = { is_nomad = no }
			export_to_variable = { which = corrupt_calc value = corruption }
			multiply_variable = { which = corrupt_calc value = 2 }
			set_variable = { which = merit_grow_cap value = 100 }
			subtract_variable = { which = merit_grow_cap which = corrupt_calc }
			if = {
				limit = { NOT = { check_variable = { which = vef_merit which = merit_grow_cap }}}
				change_variable = { which = vef_merit value = 1 }
			}
		}
		every_owned_province = {
			clr_province_flag = autonomy_group_one
			clr_province_flag = autonomy_group_two
			clr_province_flag = autonomy_group_three
			clr_province_flag = autonomy_group_four
			clr_province_flag = autonomy_group_five
		}
		capital_scope = {
			every_neighbor_province = {
				limit = { owned_by = ROOT }
				set_province_flag = autonomy_group_one
				every_neighbor_province = {
					limit = {
						owned_by = ROOT
						is_capital = no
						NOT = { has_province_flag = autonomy_group_one }
					}
					set_province_flag = autonomy_group_two
					every_neighbor_province = {
						limit = {
							owned_by = ROOT
							is_capital = no
							NOT = { has_province_flag = autonomy_group_one }
							NOT = { has_province_flag = autonomy_group_two }
						}
						set_province_flag = autonomy_group_three
						every_neighbor_province = {
							limit = {
								owned_by = ROOT
								is_capital = no
								NOT = { has_province_flag = autonomy_group_one }
								NOT = { has_province_flag = autonomy_group_two }
								NOT = { has_province_flag = autonomy_group_three }
							}
							set_province_flag = autonomy_group_four
							every_neighbor_province = {
								limit = {
									owned_by = ROOT
									is_capital = no
									NOT = { has_province_flag = autonomy_group_one }
									NOT = { has_province_flag = autonomy_group_two }
									NOT = { has_province_flag = autonomy_group_three }
									NOT = { has_province_flag = autonomy_group_four }
								}
								set_province_flag = autonomy_group_four
							}
						}
					}
				}
			}
		}
		every_owned_province = {
			if = {
				limit = {
					NOT = { has_province_flag = autonomy_group_one }
					NOT = { has_province_flag = autonomy_group_two }
					NOT = { has_province_flag = autonomy_group_three }
					NOT = { has_province_flag = autonomy_group_four }
					is_capital = no
				}
				set_province_flag = autonomy_group_five
			}
			if = {
				limit = { region = capital }
				trigger_switch = {
					on_trigger = has_province_flag
					autonomy_group_four = { clr_province_flag = autonomy_group_four set_province_flag = autonomy_group_three }
					autonomy_group_five = { clr_province_flag = autonomy_group_five set_province_flag = autonomy_group_four }
				}
			}
		}
	}
	
	option = {
		name = "vef_autonomy.2.opta"
	}
}